"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_CardCollectionInput_tsx",{

/***/ "(app-pages-browser)/./src/lib/hsReplayIntegration.ts":
/*!****************************************!*\
  !*** ./src/lib/hsReplayIntegration.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseHSReplayData: () => (/* binding */ parseHSReplayData)\n/* harmony export */ });\n/**\n * Parses HSReplay JSON export data and converts it into HearthstoneJSON card format.\n * \n * @param rawData - The raw JSON string exported from HSReplay\n * @returns Array of cards in HearthstoneJSON format\n */ function parseHSReplayData(rawData) {\n    try {\n        var _data_data;\n        const data = JSON.parse(rawData);\n        // HSReplay data might be nested differently, try to find cards array\n        let cardsArray = data.cards || ((_data_data = data.data) === null || _data_data === void 0 ? void 0 : _data_data.cards) || null;\n        if (!cardsArray) {\n            // Try to parse from nested response structure\n            if (data.data && Array.isArray(data.data)) {\n                for (const item of data.data){\n                    if (item.cards) {\n                        cardsArray = item.cards;\n                        break;\n                    }\n                }\n            }\n        }\n        if (!cardsArray) {\n            throw new Error(\"Invalid HSReplay data format: missing 'cards' property\");\n        }\n        // Map HSReplay card data to HearthstoneJSON format\n        const cards = cardsArray.map((card)=>({\n                id: card.cardId || card.cardID || card.id,\n                name: card.name,\n                cost: card.cost,\n                type: card.type,\n                rarity: card.rarity\n            }));\n        return cards;\n    } catch (error) {\n        console.error(\"Failed to parse HSReplay data:\", error);\n        return [];\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvaHNSZXBsYXlJbnRlZ3JhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FDTSxTQUFTQSxrQkFBa0JDLE9BQWU7SUFDL0MsSUFBSTtZQUc2QkM7UUFGL0IsTUFBTUEsT0FBT0MsS0FBS0MsS0FBSyxDQUFDSDtRQUN4QixxRUFBcUU7UUFDckUsSUFBSUksYUFBYUgsS0FBS0ksS0FBSyxNQUFJSixhQUFBQSxLQUFLQSxJQUFJLGNBQVRBLGlDQUFBQSxXQUFXSSxLQUFLLEtBQUk7UUFDbkQsSUFBSSxDQUFDRCxZQUFZO1lBQ2YsOENBQThDO1lBQzlDLElBQUlILEtBQUtBLElBQUksSUFBSUssTUFBTUMsT0FBTyxDQUFDTixLQUFLQSxJQUFJLEdBQUc7Z0JBQ3pDLEtBQUssTUFBTU8sUUFBUVAsS0FBS0EsSUFBSSxDQUFFO29CQUM1QixJQUFJTyxLQUFLSCxLQUFLLEVBQUU7d0JBQ2RELGFBQWFJLEtBQUtILEtBQUs7d0JBQ3ZCO29CQUNGO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBLElBQUksQ0FBQ0QsWUFBWTtZQUNmLE1BQU0sSUFBSUssTUFBTTtRQUNsQjtRQUNBLG1EQUFtRDtRQUNuRCxNQUFNSixRQUFRRCxXQUFXTSxHQUFHLENBQUMsQ0FBQ0MsT0FBZTtnQkFDM0NDLElBQUlELEtBQUtFLE1BQU0sSUFBSUYsS0FBS0csTUFBTSxJQUFJSCxLQUFLQyxFQUFFO2dCQUN6Q0csTUFBTUosS0FBS0ksSUFBSTtnQkFDZkMsTUFBTUwsS0FBS0ssSUFBSTtnQkFDZkMsTUFBTU4sS0FBS00sSUFBSTtnQkFDZkMsUUFBUVAsS0FBS08sTUFBTTtZQUVyQjtRQUNBLE9BQU9iO0lBQ1QsRUFBRSxPQUFPYyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hELE9BQU8sRUFBRTtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIi9wcm9qZWN0L3NhbmRib3gvdXNlci13b3Jrc3BhY2Uvc3JjL2xpYi9oc1JlcGxheUludGVncmF0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGFyc2VzIEhTUmVwbGF5IEpTT04gZXhwb3J0IGRhdGEgYW5kIGNvbnZlcnRzIGl0IGludG8gSGVhcnRoc3RvbmVKU09OIGNhcmQgZm9ybWF0LlxuICogXG4gKiBAcGFyYW0gcmF3RGF0YSAtIFRoZSByYXcgSlNPTiBzdHJpbmcgZXhwb3J0ZWQgZnJvbSBIU1JlcGxheVxuICogQHJldHVybnMgQXJyYXkgb2YgY2FyZHMgaW4gSGVhcnRoc3RvbmVKU09OIGZvcm1hdFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VIU1JlcGxheURhdGEocmF3RGF0YTogc3RyaW5nKTogYW55W10ge1xuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKHJhd0RhdGEpO1xuICAgIC8vIEhTUmVwbGF5IGRhdGEgbWlnaHQgYmUgbmVzdGVkIGRpZmZlcmVudGx5LCB0cnkgdG8gZmluZCBjYXJkcyBhcnJheVxuICAgIGxldCBjYXJkc0FycmF5ID0gZGF0YS5jYXJkcyB8fCBkYXRhLmRhdGE/LmNhcmRzIHx8IG51bGw7XG4gICAgaWYgKCFjYXJkc0FycmF5KSB7XG4gICAgICAvLyBUcnkgdG8gcGFyc2UgZnJvbSBuZXN0ZWQgcmVzcG9uc2Ugc3RydWN0dXJlXG4gICAgICBpZiAoZGF0YS5kYXRhICYmIEFycmF5LmlzQXJyYXkoZGF0YS5kYXRhKSkge1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZGF0YS5kYXRhKSB7XG4gICAgICAgICAgaWYgKGl0ZW0uY2FyZHMpIHtcbiAgICAgICAgICAgIGNhcmRzQXJyYXkgPSBpdGVtLmNhcmRzO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmICghY2FyZHNBcnJheSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBIU1JlcGxheSBkYXRhIGZvcm1hdDogbWlzc2luZyAnY2FyZHMnIHByb3BlcnR5XCIpO1xuICAgIH1cbiAgICAvLyBNYXAgSFNSZXBsYXkgY2FyZCBkYXRhIHRvIEhlYXJ0aHN0b25lSlNPTiBmb3JtYXRcbiAgICBjb25zdCBjYXJkcyA9IGNhcmRzQXJyYXkubWFwKChjYXJkOiBhbnkpID0+ICh7XG4gICAgICBpZDogY2FyZC5jYXJkSWQgfHwgY2FyZC5jYXJkSUQgfHwgY2FyZC5pZCxcbiAgICAgIG5hbWU6IGNhcmQubmFtZSxcbiAgICAgIGNvc3Q6IGNhcmQuY29zdCxcbiAgICAgIHR5cGU6IGNhcmQudHlwZSxcbiAgICAgIHJhcml0eTogY2FyZC5yYXJpdHksXG4gICAgICAvLyBBZGQgb3RoZXIgcHJvcGVydGllcyBhcyBuZWVkZWRcbiAgICB9KSk7XG4gICAgcmV0dXJuIGNhcmRzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UgSFNSZXBsYXkgZGF0YTpcIiwgZXJyb3IpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInBhcnNlSFNSZXBsYXlEYXRhIiwicmF3RGF0YSIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJjYXJkc0FycmF5IiwiY2FyZHMiLCJBcnJheSIsImlzQXJyYXkiLCJpdGVtIiwiRXJyb3IiLCJtYXAiLCJjYXJkIiwiaWQiLCJjYXJkSWQiLCJjYXJkSUQiLCJuYW1lIiwiY29zdCIsInR5cGUiLCJyYXJpdHkiLCJlcnJvciIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/hsReplayIntegration.ts\n"));

/***/ })

});